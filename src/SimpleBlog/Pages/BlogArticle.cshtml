@page "/blog/{id}"
@model SimpleBlog.Pages.ArticleModel
@{
    ViewData["Title"] = Model.Title;
}

@section Styles {
    <link href="~/libs/highlight/styles/github-dark.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/libs/highlight/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
}

<main>
    <section class="page-title">
        <div class="container">
            <h1 class="display-4">@Model.Title</h1>
        </div>
    </section>
    <section class="page-title-bottom py-1 mb-3">
        <div class="container">
            <div class="row">
                <div class="col">
                    <p class="mb-0">@Html.DisplayFor(m => m.Created)</p>
                </div>
                <div class="col-9 text-right">
                    @if (Model.Tags != null && Model.Tags.Count > 0)
                    {
                        <ul class="list-inline mb-0">
                            <li class="list-inline-item">Categories</li>
                            @foreach (var tag in Model.Tags)
                            {
                                <li class="list-inline-item"><a asp-page="/blogtag" asp-route-tag="@tag">@tag</a></li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    </section>
    <section class="container pt-3">
        @if (User.Identity.IsAuthenticated)
        {
            <p><a class="btn btn-primary" role="button" asp-page="/adminarticle" asp-route-id="@Model.Id">Edit this article</a></p>
        }
        @Html.Raw(Model.HtmlBody)
        @if (Model.RecommendedArticles?.Count > 0)
        {
            <div class="page-title-bottom pl-3 py-1 mb-3">
                <h4>Recommended content</h4>
            </div>
            <ul class="list-unstyled">
                @foreach (var article in Model.RecommendedArticles)
                {
                    <li>
                        <a asp-page="/blogarticle" asp-route-id="@article.Id">@article.Title</a>
                        <p>@article.Created.ToString("MMMM dd, yyyy")</p>
                    </li>
                }
            </ul>
        }
    </section>
    
    <section class="container pt-3">
        <div class="page-title-bottom pl-3 py-1 mb-3">
            <h4>Comments</h4>
        </div>
        @if (Model.Comments.Count > 0)
        {
            <form method="post">
                @Html.HiddenFor(m => m.Id)
                <ul class="list-unstyled">
                    @foreach (var comment in Model.Comments)
                    {
                        <li>
                            <div class="row">
                                <div class="col">
                                    <p><b>@comment.Author</b></p>
                                </div>
                                <div class="col text-right">
                                    <p>@comment.Created.ToString("MMMM dd, yyyy")</p>
                                </div>
                            </div>
                            <p class="comment">@comment.Content</p>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <ul class="list-inline">
                                    @if (!comment.Readed)
                                    {
                                        <li class="list-inline-item"><button type="submit" class="btn btn-link button-link-with-links" asp-page-handler="MarkCommentAsRead" asp-route-commentId="@comment.Id">Mark as read</button></li>
                                    }
                                    <li class="list-inline-item"><button type="submit" class="btn btn-link button-link-with-links" asp-page-handler="DeleteComment" asp-route-commentId="@comment.Id">Delete</button></li>
                                </ul>
                            }
                            <hr />
                        </li>
                    }
                </ul>
            </form>
        }
        @if (Model.EnableComments) {
            <h5>Leave your comment</h5>
			<form method="post">
                @Html.HiddenFor(m => m.Hash)
                @Html.HiddenFor(m => m.Id)
                <div class="form-group">
                    <label for="Answer">@Model.Question</label>
                    @Html.TextBoxFor(m => m.Answer, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Answer, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Author)
                    @Html.TextBoxFor(m => m.Author, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Author, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Comment)
                    @Html.TextAreaFor(m => m.Comment, 5, 0, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-primary">Send</button>
            </form>
        } else {
			<p>Sorry, comments are disabled.</p>
        }
    </section>

</main>
