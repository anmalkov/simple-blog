@page "/admin/config"
@model SimpleBlog.Pages.AdminConfigModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin Config";
}

<div class="page-title-small">
    <div class="container">
        <h1>Site configuration</h1>
    </div>
</div>

<div class="container page-body">
    <form method="post">
        <div class="form-group">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner)
            @Html.TextBoxFor(m => m.Owner, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Owner, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BlogPostsPageSize)
            @Html.TextBoxFor(m => m.BlogPostsPageSize, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BlogPostsPageSize, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LatestBlogPostsCount)
            @Html.TextBoxFor(m => m.LatestBlogPostsCount, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LatestBlogPostsCount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.RecommendedArticlesCount)
            @Html.TextBoxFor(m => m.RecommendedArticlesCount, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecommendedArticlesCount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group form-check">
            @if (Model.InstrumentationKeyProvided)
            {
                @Html.CheckBoxFor(m => m.EnableClientSideTelemetry, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.EnableClientSideTelemetry, new { @class = "form-check-label" })
            }
            else
            {
                @Html.CheckBoxFor(m => m.EnableClientSideTelemetry, new { @class = "form-check-input", disabled = "disabled" })
                @Html.LabelFor(m => m.EnableClientSideTelemetry, new { @class = "form-check-label" })
                <div id="EnableClientSideTelemetryHelp" class="form-text">To activate the client-side telemetry please provide the connection string in APPLICATIONINSIGHTS_CONNECTION_STRING environment variable</div>
            }
        </div>
        <div class="form-group form-check">
            @Html.CheckBoxFor(m => m.EnableComments, new { @class = "form-check-input" })
            @Html.LabelFor(m => m.EnableComments, new { @class = "form-check-label" })
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </form>
    <h3 class="mt-4">Favicon</h3>
    <ul class="list-inline">
        @if (!Model.FaviconExists)
        {
            <li class="list-inline-item">Favicon images are not uploaded. You can use <a href="https://favicon.io/favicon-converter">favicon.io converter</a> to generate images.</li>
        }
        else
        {
            <li class="list-inline-item"><img src="/blogimages/favicon/favicon-16x16.png" /></li>
            <li class="list-inline-item"><img src="/blogimages/favicon/favicon-32x32.png" /></li>
            <li class="list-inline-item"><img src="/blogimages/favicon/favicon.ico" /></li>
        }
    </ul>
    <form method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <input class="form-control py-1" type="file" asp-for="UploadFavicons" multiple />
        </div>
        <button type="submit" class="btn btn-primary" asp-page-handler="Favicon">Upload favicon images</button>
    </form>
    <h3 class="mt-4">Menu</h3>
    <a class="btn btn-primary" role="button" asp-page="/adminmenu">Add menu item</a>
    <form method="post">
        <table class="table mt-3">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Order</th>
                    <th scope="col">Title</th>
                    <th scope="col">URL</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var menuItem in Model.MenuItems)
                {
                    <tr>
                        <td>@menuItem.Order</td>
                        <td><a asp-page="/adminmenu" asp-route-title="@menuItem.Title">@menuItem.Title</a></td>
                        <td>@menuItem.Url</td>
                        <td>
                            <button type="submit" class="btn btn-link button-link-with-links" asp-page-handler="DeleteMenuItem" asp-route-title="@menuItem.Title">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>
</div>

